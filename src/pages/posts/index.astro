---
import { getCollection } from "astro:content";
import SiteLayout from "../../layouts/SiteLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import TagIcon from "../../img/tag.svg";
const posts = (await getCollection("posts")).sort(
	(a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);
const years = [
	...new Set(
		posts
			.map((post: any) => post.data.date.getFullYear())
			.flat()
			.filter(Boolean),
	),
];
---

<SiteLayout title="Posts">
	<div class="page-container">
		<header class="page-header">
			<h1 class="page-title">Posts</h1>
		</header>

		<div class="page-content-contain">
			{
				years.map((year) => {
					const headingClass =
						year === new Date().getFullYear()
							? "screen-reader-text"
							: "posts-subheading";
					const yearPosts = posts.filter(
						(post) => post.data.date.getFullYear() === year,
					);
					return (
						<div class="year-group">
							<h2 class={headingClass} id={`${year}-ref`}>
								{year}
							</h2>
							<ul class="post-list">
								{yearPosts.map((post) => (
									<li>
										<h3 class="post-title">
											<a class="post-link" href={`/posts/${post.id.slice(11)}`}>
												{post.data.title}
											</a>
										</h3>
										<div class="post-meta">
											<p class="post-date">
												<FormattedDate date={post.data.date} />
											</p>
											{post.data.tags?.length ? (
												<div class="post-tags-container">
													<TagIcon />
													<ul class="post-tags" aria-label="Post Tags">
														{post.data.tags.map((tag) => (
															<li>
																<a href={`/category/${tag.toLowerCase()}`}>
																	{tag}
																</a>
															</li>
														))}
													</ul>
												</div>
											) : null}
										</div>
									</li>
								))}
							</ul>
						</div>
					);
				})
			}
		</div>
	</div>
</SiteLayout>
